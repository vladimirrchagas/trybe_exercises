{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/trybe-course/trybe_exercises/bloco_16/dia_2/exercises/exercise-react-with-redux-intro/src/Cars.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { moveCar } from './redux/actionCreators';\nimport carBlue from './images/carBlue.jpeg';\nimport carRed from './images/carRed.jpeg';\nimport carYellow from './images/carYellow.jpeg';\n\nclass Cars extends React.Component {\n  render() {\n    const {\n      redCar,\n      blueCar,\n      yellowCar,\n      moveCar\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: redCar ? 'car-right' : 'car-left',\n      src: carRed,\n      alt: \"red car\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => moveCar('red', !redCar),\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"move\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: blueCar ? 'car-right' : 'car-left',\n      src: carBlue,\n      alt: \"blue car\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => moveCar('blue', !blueCar),\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"move\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: yellowCar ? 'car-right' : 'car-left',\n      src: carYellow,\n      alt: \"yellow car\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => moveCar('yellow', !yellowCar),\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, \"move\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  moveCar: (color, status) => dispatch(moveCar(color, status))\n});\n\nconst mapStateToProps = state => ({\n  state // blueCar: state.cars.blueCar,\n  // yellowCar: state.cars.yellowCar,\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cars);","map":{"version":3,"sources":["/home/vladimir/trybe-course/trybe_exercises/bloco_16/dia_2/exercises/exercise-react-with-redux-intro/src/Cars.jsx"],"names":["React","connect","moveCar","carBlue","carRed","carYellow","Cars","Component","render","redCar","blueCar","yellowCar","props","mapDispatchToProps","dispatch","color","status","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA,SAAnB;AAA8BT,MAAAA;AAA9B,QAA0C,KAAKU,KAArD;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEH,MAAM,GAAG,WAAH,GAAiB,UAAvC;AAAmD,MAAA,GAAG,EAAEL,MAAxD;AAAgE,MAAA,GAAG,EAAC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,KAAD,EAAQ,CAACO,MAAT,CAA9B;AAAgD,MAAA,IAAI,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEC,OAAO,GAAG,WAAH,GAAiB,UAAxC;AAAoD,MAAA,GAAG,EAAEP,OAAzD;AAAkE,MAAA,GAAG,EAAC,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,MAAD,EAAS,CAACQ,OAAV,CAA9B;AAAkD,MAAA,IAAI,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEC,SAAS,GAAG,WAAH,GAAiB,UAA1C;AAAsD,MAAA,GAAG,EAAEN,SAA3D;AAAsE,MAAA,GAAG,EAAC,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMH,OAAO,CAAC,QAAD,EAAW,CAACS,SAAZ,CAA9B;AAAsD,MAAA,IAAI,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CATF,CADF;AAgBD;;AApBgC;;AAuBnC,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,OAAO,EAAE,CAACa,KAAD,EAAQC,MAAR,KAAmBF,QAAQ,CAACZ,OAAO,CAACa,KAAD,EAAQC,MAAR,CAAR;AADE,CAAL,CAAnC;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCA,EAAAA,KADgC,CAEhC;AACA;;AAHgC,CAAL,CAA7B;;AAMA,eAAejB,OAAO,CAACgB,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CP,IAA7C,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { moveCar } from './redux/actionCreators'\n\nimport carBlue from './images/carBlue.jpeg';\nimport carRed from './images/carRed.jpeg';\nimport carYellow from './images/carYellow.jpeg';\n\nclass Cars extends React.Component {\n  render() {\n\n    const { redCar, blueCar, yellowCar, moveCar } = this.props; \n    return (\n      <div>\n        <div>\n          <img className={redCar ? 'car-right' : 'car-left'} src={carRed} alt=\"red car\" />\n          <button onClick={() => moveCar('red', !redCar)} type=\"button\">move</button>\n        </div>\n        <div>\n          <img className={blueCar ? 'car-right' : 'car-left'} src={carBlue} alt=\"blue car\" />\n          <button onClick={() => moveCar('blue', !blueCar)} type=\"button\">move</button>\n        </div>\n        <div>\n          <img className={yellowCar ? 'car-right' : 'car-left'} src={carYellow} alt=\"yellow car\" />\n          <button onClick={() => moveCar('yellow', !yellowCar)} type=\"button\">move</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  moveCar: (color, status) => dispatch(moveCar(color, status)),\n});\n\nconst mapStateToProps = state => ({\n  state,\n  // blueCar: state.cars.blueCar,\n  // yellowCar: state.cars.yellowCar,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cars)\n"]},"metadata":{},"sourceType":"module"}