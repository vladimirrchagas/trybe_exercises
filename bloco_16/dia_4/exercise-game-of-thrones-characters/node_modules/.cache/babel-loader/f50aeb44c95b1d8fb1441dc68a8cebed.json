{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/trybe-course/trybe_exercises/bloco_16/dia_4/exercise-game-of-thrones-characters/src/components/CharacterInfo.js\";\nimport React from 'react'; // importe o connect do 'react-redux';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    //faça a desestruturação das props aqui\n    if (!loading && character) {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }, \"Name: \", character.name), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, \"Gender: \", character.gender), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, \"Aliases: \", character.aliases.map((alias, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: `${alias}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 65\n        }\n      }, alias))), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, \"Books: \", character.books.map((book, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: `${book}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 60\n        }\n      }, book))));\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      }, error);\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 27\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, \"Type a character name and click to search!\");\n  }\n\n}\n\n; //mapeie o estado global para a propriedade da sua aplicação\n\nconst mapStateToProps = state => ({\n  data: state.data\n}); // conecte este componente ao redux aqui\n\n\nexport default connect(mapStateToProps)(CharacterInfo); //faça as propTypes","map":{"version":3,"sources":["/home/vladimir/trybe-course/trybe_exercises/bloco_16/dia_4/exercise-game-of-thrones-characters/src/components/CharacterInfo.js"],"names":["React","CharacterInfo","Component","render","loading","character","name","gender","aliases","map","alias","index","books","book","error","mapStateToProps","state","data","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC1CC,EAAAA,MAAM,GAAG;AACP;AAEA,QAAI,CAACC,OAAD,IAAYC,SAAhB,EAA2B;AACzB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWA,SAAS,CAACC,IAArB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaD,SAAS,CAACE,MAAvB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAcF,SAAS,CAACG,OAAV,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,kBAAkB;AAAG,QAAA,GAAG,EAAG,GAAED,KAAM,IAAGC,KAAM,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BD,KAA9B,CAAxC,CAAd,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYL,SAAS,CAACO,KAAV,CAAgBH,GAAhB,CAAoB,CAACI,IAAD,EAAOF,KAAP,kBAAiB;AAAG,QAAA,GAAG,EAAG,GAAEE,IAAK,IAAGF,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BE,IAA7B,CAArC,CAAZ,CAJF,CADF;AAQD;;AACD,QAAIC,KAAJ,EAAW;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAN,CAAP;AAA4B;;AACzC,QAAIV,OAAJ,EAAa;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAA+B;;AAC9C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAP;AACD;;AAjByC;;AAkB3C,C,CAED;;AACA,MAAMW,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADoB,CAAL,CAA7B,C,CAIA;;;AACA,eAAeC,OAAO,CAACH,eAAD,CAAP,CAAyBd,aAAzB,CAAf,C,CAGA","sourcesContent":["import React from 'react';\n// importe o connect do 'react-redux';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    //faça a desestruturação das props aqui\n\n    if (!loading && character) {\n      return (\n        <ul>\n          <li>Name: {character.name}</li>\n          <li>Gender: {character.gender}</li>\n          <li>Aliases: {character.aliases.map((alias, index) => <p key={`${alias}-${index}`}>{alias}</p>)}</li>\n          <li>Books: {character.books.map((book, index) => <p key={`${book}-${index}`}>{book}</p>)}</li>\n        </ul>\n      )\n    }\n    if (error) { return <div>{error}</div>; }\n    if (loading) { return <div>Loading...</div>; }\n    return <div>Type a character name and click to search!</div>;\n  }\n};\n\n//mapeie o estado global para a propriedade da sua aplicação\nconst mapStateToProps = state => ({\n  data: state.data,\n});\n\n// conecte este componente ao redux aqui\nexport default connect(mapStateToProps)(CharacterInfo);\n\n\n//faça as propTypes\n"]},"metadata":{},"sourceType":"module"}