{"ast":null,"code":"import charAPI from '../services/charAPI';\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const GET_DATA = 'GET_DATA';\nexport const FAILED_DATA = 'FAILED_DATA';\n\nconst requestData = () => ({\n  type: REQUEST_DATA\n});\n\nconst getData = data => ({\n  type: GET_DATA,\n  payload: data.message\n});\n\nconst failedData = error => ({\n  type: FAILED_DATA,\n  payload: error\n});\n\nexport function fetchData(name) {\n  console.log(name);\n  return async dispatch => {\n    dispatch(requestData());\n    const data = await charAPI(name);\n    console.log(data);\n  };\n}","map":{"version":3,"sources":["/home/vladimir/trybe-course/trybe_exercises/bloco_16/dia_4/exercise-game-of-thrones-characters/src/actions/index.js"],"names":["charAPI","REQUEST_DATA","GET_DATA","FAILED_DATA","requestData","type","getData","data","payload","message","failedData","error","fetchData","name","console","log","dispatch"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;;AAEP,MAAMC,WAAW,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEJ;AAAR,CAAP,CAApB;;AAEA,MAAMK,OAAO,GAAIC,IAAD,KAAW;AACzBF,EAAAA,IAAI,EAAEH,QADmB;AAEzBM,EAAAA,OAAO,EAAED,IAAI,CAACE;AAFW,CAAX,CAAhB;;AAKA,MAAMC,UAAU,GAAIC,KAAD,KAAY;AAC7BN,EAAAA,IAAI,EAAEF,WADuB;AAE7BK,EAAAA,OAAO,EAAEG;AAFoB,CAAZ,CAAnB;;AAKA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,MAAOG,QAAP,IAAqB;AAC1BA,IAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACA,UAAMG,IAAI,GAAG,MAAMP,OAAO,CAACa,IAAD,CAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,GAJD;AAKD","sourcesContent":["import charAPI from '../services/charAPI';\n\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const GET_DATA = 'GET_DATA';\nexport const FAILED_DATA = 'FAILED_DATA';\n\nconst requestData = () => ({ type: REQUEST_DATA });\n\nconst getData = (data) => ({\n  type: GET_DATA,\n  payload: data.message,\n});\n\nconst failedData = (error) => ({\n  type: FAILED_DATA,\n  payload: error,\n});\n\nexport function fetchData(name) {\n  console.log(name)\n  return async (dispatch) =>  {\n    dispatch(requestData());\n    const data = await charAPI(name);\n    console.log(data);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}